package gapp.web.controller;

import java.util.HashSet;
import java.util.Set;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttributes;

import gapp.model.dao.UserDao;
import gapp.web.validator.UserValidator;
import gapp.model.User;

@Controller
@SessionAttributes("user")
public class UserController {

	@Autowired
	private UserDao userDao;

	@Autowired
	private UserValidator userValidator;

	@RequestMapping("/user/users.html")
	public String users( ModelMap models, HttpSession session)
	{
		models.put( "users", userDao.getUser( "student1@localhost.localdomain" ));
		return "user/users";
	}

	@RequestMapping("/user/list.html")
	public String list( ModelMap models )
	{
		models.put( "users", userDao.getUsers() );
		return "user/list";
	}

	@RequestMapping("/user/home.html")
	public String home( ModelMap models, HttpSession session )
	{
		/*String checkEmail = (String) session.getAttribute("email_id");
		System.out.println(checkEmail);
		//System.out.println(checkEmail.equals(null));
		if( session.getAttribute("email_id") != null ) 
		{
			if (userDao.getUser(checkEmail).isAdmin())
				return "user/home";
			//return "user/login";

		}*/
	
		return "user/home";
		//return "redirect:/user/home.html";

	}

	@RequestMapping("/user/studentDetails.html")
	public String studentDetails( /*@RequestParam String emailId,*/ ModelMap models, HttpSession session )
	{
		//models.put( "users", userDao.getUser(emailId) );
		return "user/studentDetails";
	}

	@RequestMapping("/user/staffManagement.html")
	public String staffManagement( ModelMap models, HttpSession session )
	{
		return "user/staffManagement";
	}

	@RequestMapping("/index.html")
	public String index( ModelMap models )
	{
		return "/index";
	}

	@RequestMapping(value = "/user/register.html", method = RequestMethod.GET)
	public String register( ModelMap models )
	{
		models.put( "user", new User() );
		return "user/register";
	}

	@RequestMapping(value = "/user/register.html", method = RequestMethod.POST)
	public String register( @ModelAttribute User user, BindingResult result, HttpSession session )
	{
		String email_id = user.getEmail_id().toLowerCase();

		userValidator.validate( user, result );
		if( result.hasErrors() ) return "user/register";

		if(userDao.getUser(email_id) != null)
		{
			userValidator.checkIfExist( user, result );
			if(result.hasErrors()) return "user/register";
			return "user/register";
		}

		else {
			Set<String> newSet = new HashSet<String>();
			newSet.add("Student");
			user.setRoles(newSet);
			user.setEmail_id(email_id);
			userDao.saveUser( user );
			/*session.setAttribute("email_id", user.getEmail_id());
			return "redirect:studentDetails.html?id="+email_id+"";*/
			/*sessionStatus.setComplete();*/
			return "redirect:/user/login.html";
		}

	}

	@RequestMapping(value = "/user/login.html", method = RequestMethod.GET)
	public String login( ModelMap models )
	{
		models.put( "user", new User() );
		return "user/login";
	}

	@RequestMapping(value = "/user/login.html", method = RequestMethod.POST)
	public String login( @ModelAttribute User user, BindingResult result, HttpSession session)
	{
		String email_id = user.getEmail_id().toLowerCase();
		//System.out.println(email_id);

		userValidator.validateLogin( user, result );
		if( result.hasErrors() ) return "user/login";

		//System.out.println(userDao.getUser(email_id));
		//System.out.println(user.getPassword());

		if(userDao.getUser(email_id) == null)
		{
			return "user/login";
		}
		else{

			if(!(userDao.getUser(email_id).getPassword().equals(user.getPassword())))
			{
				return "user/login";

			} 
			else {
				if(	userDao.getUser(email_id).isAdmin()	)
				{
					session.setAttribute("email_id", user.getEmail_id());
					return "redirect:home.html";
				}

				else if( userDao.getUser(email_id).isStaff())	
				{
					session.setAttribute("email_id", user.getEmail_id());
					return "redirect:staffManagement.html";
				}
				session.setAttribute("email_id", user.getEmail_id());
				return "redirect:studentDetails.html";
			}
		}
	}


	@RequestMapping("/user/logout.html")
	public String logout( ModelMap models, HttpSession session ){
		System.out.println("inside logout");
		session.removeAttribute("email_id");
		session.invalidate();
		return "redirect:/";
	}
}